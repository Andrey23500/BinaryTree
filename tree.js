import{Node}from"./node.js";var Tree=function(){function e(){this._root=null}return Object.defineProperty(e.prototype,"root",{get:function(){return this._root},enumerable:!1,configurable:!0}),e.prototype.addNode=function(e,t){var r=new Node(e,t);if(null==this._root)this._root=r;else for(var o=this._root;o;)if(r.key<o.key){if(!o.left)return void(o.left=r);o=o.left}else{if(!(r.key>o.key))return;if(!o.right)return void(o.right=r);o=o.right}},e.prototype.findByKey=function(e){for(var t=this._root;t&&t.key!==e;)t.key>e?t=t.left:t.key<e&&(t=t.right);return t},e.prototype.findMinElement=function(e){return null===e.left?e:this.findMinElement(e.left)},e.prototype.deleteNode=function(e,t){if(e.key!==t)return t<e.key?(null===e.left||(e.left=this.deleteNode(e.left,t)),e):t>e.key?(null===e.right||(e.right=this.deleteNode(e.right,t)),e):null;if(null===e.left&&null===e.right)return null;if(null===e.left)return e.right;if(null===e.right)return e.left;t=this.findMinElement(e.right);return e.key=t.key,e.right=this.deleteNode(e.right,t.key),e},e.prototype.deleteItem=function(e){return null===this._root?null:(this._root=this.deleteNode(this._root,e),1)},e}();export{Tree};